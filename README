avaScript Login Example with SQLite
This is a simple example of a JavaScript login system using Express, SQLite, and body-parser. The application listens on port 3000 (or the value of the PORT environment variable) and serves a login form at the root path. Users can log in with a username and password. Upon successful login, the user is presented with a page containing some "secret" data.

Getting Started
Make sure you have Node.js and npm installed on your machine.
Clone this repository or download the source code.
In the project directory, run npm install to install the required dependencies.
Start the application by running node app.js or npm start.
Open your browser and navigate to http://localhost:3000 to see the login form.
Dependencies
express: Web framework for Node.js
sqlite3: Module for using SQLite databases in Node.js
body-parser: Middleware for parsing incoming request bodies
Database
The application uses an in-memory SQLite database to store user information. The user table has three columns: id, username, and password.

Routes
GET /: Serves the login form
POST /login: Verifies user credentials and responds with a page containing "secret" data if the credentials are correct
